ПЛАГИН: DSGooglePlayPlugin


ДАННЫЕ

	adPulug – статиеский укатель на экземпляр класса. ОБЛЕГЧАЕТ ДОСТУП К ФУНЦИОНАЛУ
Пример загурзки: 		
			SGooglePlayPlugin.adPulug.DSAdLoad();


	adUnitId – иденитификатор обьявления,  для однозначного определения конкретного рекламного блока.
Пример с сайта: 	         
			Ідентифікатор рекламного блоку: ca-app-pub-4779550302896183/3717338155

	ADPosition – свойство перечисляемого типа, принимает значение одной из констант отвечаюцих за резмер обьявления (значения размеров тут:  https://developers.google.com/mobile-ads-sdk/docs/admob/intermediate?hl=ru-ru).
	ADBannerSize – свойство перечисляемого типа, принимает значение одной  из констант отвечающей за полжение. Значения констант должны сооветсвовать констамтам класса Gravity (Java), или их побитовому сложению, например  (Gravity.RIGHT | Gravity.TOP) – верхний правый угол.  Типа ADPosition содержыт 9 констант для 9ти положений(больше тут http://developer.android.com/reference/android/view/Gravity.html).

	isAdVisble показыват отображается ли обьявление. Устанавливатся в значени TRUE при вызове одного из методов DSAdLoad(…), несмотря на то что реклама начнет отображатся пожже, псоле завершения загрузки.



Закритые данные (private)
	AndroidJavaObject jo; - обьект для доступа к джава классу
	bool isAdVisble - видимый ли плагин




МЕТОДЫ


	void DSAdLoad()  -  загружает новое обьявление с установленными параметрами.
	void DSAdLoad(string id, ADBannerSize size, ADPosition pos)  -  загружает обьявление с новыми параметрами.
Перезагрузка необходио когда нужно поменять  размер обьявления или идентификатор, но также можно метять и позицию. Но если нужно поменять только позицию то приведенными методами пользоватся не стоит.  
Также при вызове одного из них свойство 	isAdVisble	стоновтися равным TRUE. Но загрузка обьявления проводится не мнгновенно,  статус загрузки (загружаеся ли в данный момент) возвращет метод  - GetLoadingState().  
	void DSAdSetPosition(ADPosition pos)  - изменяет позицию, без перезагрузки обьявления.
	bool GetLoadingState()  - возвращает true если обьявление в процеесе загрузки.
	ADBannerSize PreviousSize() -  используется только как параметр в DSAdLoad(...) , если параметр «size» должен быть проигнорирован.
 	ADPosition PreviousPosition() -  используется только как параметр в DSAdLoad(...) , если параметр «pos» должен быть проигнорирован.
	void DSAdSetVisible(bool setVisible) - включает или отключает показ обьявлений (setVisible = true – включает показ).



	ВНИМАНИЕ
	Визов метода    DSAdSetVisible(…)     до окончания загрузки обьявления БУДУТ ИГНОРИРОВАТСЯ, в то время как методы 	DSAdLoad(),DSAdLoad(…),DSAdSetPosition(…) будут нормально работать (первые два начнут загрузку заново, последний изменитпозицию в которой будет отображатся зангуржаемый в данный момент банер).



	bool GetVisible() - возвращает true если банер видимый, или загружается.
	void Vibro(int delay) Позволяет протестировать правльность интеграции плагина, если правильно – завибрирует на    delay   милисекунд.






ОТЛАДКА: DSGooglePlayDebug 


Разработка приложения и отладка производится при помщи класса     DSGooglePlayDebug. Он является наследником класса    DSGooglePlayPlugin , и переопределяет его методы. При этом он также явяется одничкой, тоесть его интерфейс будет доступен через
 «SGooglePlayPlugin.adPulug» при этом его реализации методов не используют функции из джавы, тоесть не вызывают ошибок при запуске. 
Плюс данный класс проиводит показ банеров разных размеров, и с ними можно выполнять теже действия что и с реальными обьявлениями.
Для использования отлачика необходимо  повесть  скрипт на обьект, желательно на тот  же на котором плагин, для удобста,  и отключить сам плагин. После завершения отладки необходимо отключить отладчик и включить плагин.
	ВНИМАНИЕ
На сцене должен быть включен ТОЛЬКО ОДИН скрипт DSGooglePlayDebug или DSGooglePlayPlugin, иначе код может работать неправильно. Наличие двух и более обьектов данных классов на сцене также вызовет ошибку. 






ДЕМО: DSADPluginDemo


Для демонстрации есть скрипт DSADPluginDemo, который демонстрирует возможность управление плагином (или отладчиком). Также есть демонстрациооный пример сцена «mainscene»
